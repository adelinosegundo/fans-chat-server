'use strict';

 /**
 * team controller file * autogenerated by mongoose-scaffold-crud **/

var teams = require('express').Router(),
    Model = require('../models/model-teams.js');

teams.get('/', function(req, res) {
    Model.find(function(err, teams){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error getting teams.'
                });
            }
            return res.json(teams);
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
        return res.render('teams/index', {teams: teams});
        }
    });
});

teams.post('/', function(req, res) {
    var team = new Model({
        'name': req.body['name']
    });
    team.save(function(err, team){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error saving item.',
                    error: err
                });
            }
            return res.json({
                message: 'saved',
                _id: team._id
            });
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
            return res.render('teams/edit', {team: team});
        }
    });
});

teams.get('/:id', function(req, res) {
    var id = req.params.id;
    Model.findOne({_id: id}, function(err, team){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error getting team.'
                });
            }
            if(!team) {
                return res.json(404, {
                    message: 'No such team.'
                });
            }
            return res.json(team);
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
            if(!team) {
                return res.end('No such team');
            }
            return res.render('teams/edit', {team: team, flash: 'Created.'});
        }
    });
});

teams.put('/:id', function(req, res) {
    var id = req.params.id;
    Model.findOne({_id: id}, function(err, team){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error saving team',
                    error: err
                });
            }
            if(!team) {
                return res.json(404, {
                    message: 'No such team'
                });
            }
            team['name'] = req.body['name'] ? req.body['name'] : team['name'];
            team.save(function(err, team){
                if(err) {
                    return res.json(500, {
                        message: 'Error getting team.'
                    });
                }
                if(!team) {
                    return res.json(404, {
                        message: 'No such team'
                    });
                }
                return res.json(team);
            });
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
            if(!team) {
                return res.end('No such team');
            }
            team['name'] = req.body['name'] ? req.body['name'] : team['name'];
            team.save(function(err, team){
                if(err) {
                    return res.send('500: Internal Server Error', 500);
                }
                if(!team) {
                    return res.end('No such team');
                }
                return res.render('teams/edit', {team: team, flash: 'Saved.'});
            });
        }
    });
});

teams.delete('/:id', function(req, res) {
    var id = req.params.id;
    Model.findOne({_id: id}, function(err, team){
        if (req.accepts('html', 'json') === 'json') {
            if(err) {
                return res.json(500, {
                    message: 'Error getting team.'
                });
            }
            if(!team) {
                return res.json(404, {
                    message: 'No such team'
                });
            }
            return res.json(team);
        } else {
            if(err) {
                return res.send('500: Internal Server Error', 500);
            }
            if(!team) {
                return res.end('No such team');
            }
            return res.render('index', {flash: 'Item deleted.'});
        }
    });
});

module.exports = teams;